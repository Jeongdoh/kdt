#---------------------------------------------------------
#연락처 프로그램을 구현하고자 합니다.
#---------------------------------------------------------
# 기능 => 연락처 저장/ 삭제/ 수정
# 데이터 => 이름, 전화번호, 사진, 별명, 직장, 그룹, 이메일
#---------------------------------------------------------
#(1) 연락처에 사용될 클래스를 생성하세요.
#
#---------------------------------------------------------
class Contact:

    def __init__(self,):
        self.member=Member()



#---------------------------------------------------------
#연락처 프로그램 데이터 클래스 => 데이터 타입
#---------------------------------------------------------
# -Member
# 필수 데이터 => 전화번호, 이름, 이메일
# 선택 데이터 =>  사진, 별명, 주소, 생일
#---------------------------------------------------------
class Member:
    #클래스 변수

    #인스턴스 변수 생성 및 초기화 메서드
    def __init__(self,phone,name, alias='', picture='', email='', addr='', birth=''):
        self.phone=phone
        self.name=name
        self.alias=alias
        self.picture=picture
        self.email=email
        self.addr=addr
        self.birth=birth

    #인스턴스 메서드
    def showInfo(self):
        print(f'---[{self.phone}]---')
        print(f'이름 {self.name}')
        print(f'별명 {self.alias}')
        print(f'주소 {self.addr}')
        print(f'이메일 {self.email}')


mem1=Member('010-1111-2222','홍길동')
mem2=Member('011-345-5678','마징가', addr='대구시')

mem1.showInfo()
mem2.showInfo()




#----------------------------------------------------------------------------
# 은행 관리 프로그램을 구현하고자 합니다.
#----------------------------------------------------------------------------
# 기능 => 계좌개설, 해지, 입금, 출금
# 데이터 => 계좌번호, 예금주, 개설날짜, 이율, 잔액, 개설지점
#----------------------------------------------------------------------------
#(1) 은행관리에 사용될 클래스를 생성하세요.
#----------------------------------------------------------------------------
#----------------------------------------------------------------------------
#은행 관리 프로그램 데이터 클래스 => 데이터 타입
#----------------------------------------------------------------------------
# -Account
# 필수 데이터 => 계좌번호, 예금주, 개설날짜, 이율, 잔액, 개설지점, 주민등록번호
# 선택 데이터 =>  없음
# 비공개 데이터 => 주민등록번호
#-----------------------------------------------------------------------------
class Account:
    #클래스 변수
    Bank_name='DGB'

    #인스턴스 변수 생성 및 초기화
    def __init__(self, number, name, date, rate, balance, branch, jumin):
        self.number=number
        self.name=name
        self.date=date
        self.rate=rate
        self.__balance=balance  # 비공개 데이터 => 클래스 밖에서 사용불가
        self.branch=branch
        self.__jumin=jumin      # 비공개 데이터 => 클래스 밖에서 사용불가

    # 인스턴스 메서드
    def accountInfo(self):  
        print(f'---[{self.number}]---')
        print(f'예 금 주 : {self.name}')
        print(f'주민번호 : {self.__jumin}')
        print(f'잔 액 : {self.__balance}')
        print(f'이 율 : {self.rate}')

myAccount=Account('111','m','121',0.1,1000,'-','01010101')
myAccount.accountInfo()
print('공개데이터', myAccount.rate)
print('비공개데이터', myAccount.__balance)

# myAccount.__balance=10000000000
# print('내가 만들어낸 데이터(불법증축)', myAccount.__balance) get,set메서드 안쓰면 함수 밖에서 변경, 읽기 불가능
# print(myAccount.__dict__)

# myAccount.accountInfo()

